openapi: 3.0.0

info:
  description: This API provides a number of methods to retrieve historical data across
    multiple dimensions of the TON blockchain.
  title: TON Blockchain History APIs
  version: 0.0.1
  x-logo:
    url: https://tengram.com/TENGRAM_logo.svg
    altText: Tengram

tags:
  - name: core
    description: The Core methods.
  - name: main
    description: The Main methods.

servers:
  - url: https://api.tengram.com/

components:
  schemas:

    uint64:
      type: integer
      format: int64
      minimum: 0
      maximum: 18446744073709551615

    Account:
      description: Account
      type: object
      required:
        - shard
        - seq_no
        - time
        - addr
        - addr_uf
        - balance_nanogram
        - tick
        - tock
        - storage_used_bits
        - storage_used_cells
        - storage_used_public_cells
        - last_trans_lt
        - last_trans_lt_storage
        - last_paid
      properties:
        workchain_id:
          type: integer
          format: int32
        shard:
          $ref: "#/components/schemas/uint64"
        seq_no:
          $ref: "#/components/schemas/uint64"
        root_hash:
          type: string
        file_hash:
          type: string
        time:
          $ref: "#/components/schemas/uint64"
        addr:
          type: string
        addr_uf:
          type: string
          description: User-friendly account address.
        anycast:
          type: string
        status:
          type: string
        balance_nanogram:
          $ref: "#/components/schemas/uint64"
        tick:
          $ref: "#/components/schemas/uint64"
        tock:
          $ref: "#/components/schemas/uint64"
        storage_used_bits:
          $ref: "#/components/schemas/uint64"
        storage_used_cells:
          $ref: "#/components/schemas/uint64"
        storage_used_public_cells:
          $ref: "#/components/schemas/uint64"
        last_trans_hash:
          type: string
        last_trans_lt:
          $ref: "#/components/schemas/uint64"
        last_trans_lt_storage:
          $ref: "#/components/schemas/uint64"
        last_paid:
          $ref: "#/components/schemas/uint64"
        messages_count:
          type: integer
          format: int64

    BlocksFeedResponse:
      type: object
      properties:
        scroll_id:
          type: string
        blocks:
          type: array
          items:
            $ref: "#/components/schemas/BlockInFeed"

    SentAndFees:
      type: object
      required:
        - time
        - avg_sent
        - avg_fees
      properties:
        time:
          description: "time of beginning of the day for which these metrics were calculated"
          type: string
        avg_sent:
          description: "average sent nanograms for every block of that day"
          type: number
          format: double
        avg_fees:
          description: "average fees in nanograms for every block of that day"
          type: number
          format: double

    BlockInFeed:
      description: Block in feed
      type: object
      required:
        - workchain_id
        - shard
        - seq_no
        - time
        - start_lt
        - total_fees_nanograms
        - root_hash
        - file_hash
        - trx_count
        - value_nanograms
        - ihr_fee_nanograms
        - import_fee_nanograms
        - fwd_fee_nanograms
      properties:
        workchain_id:
          type: integer
          format: int32
        shard:
          $ref: "#/components/schemas/uint64"
        seq_no:
          $ref: "#/components/schemas/uint64"
        time:
          $ref: "#/components/schemas/uint64"
        start_lt:
          $ref: "#/components/schemas/uint64"
        total_fees_nanograms:
          $ref: "#/components/schemas/uint64"
        root_hash:
          type: string
        file_hash:
          type: string
        trx_count:
          type: integer
          format: int64
        value_nanograms:
          $ref: "#/components/schemas/uint64"

    AccountMessage:
      description: Account transaction
      type: object
      required:
        - seq_no
        - account_addr
        - account_addr_uf
        - lt
        - time
        - message_lt
        - src
        - src_uf
        - dest
        - dest_uf
        - body
      properties:
        workchain_id:
          type: integer
          format: int32
        shard:
          type: string
        seq_no:
          $ref: "#/components/schemas/uint64"
        account_addr:
          type: string
        account_addr_uf:
          type: string
          description: User-friendly account address.
        lt:
          $ref: "#/components/schemas/uint64"
        time:
          $ref: "#/components/schemas/uint64"
        type:
          type: string
        trx_hash:
          type: string
        message_type:
          type: string
        message_lt:
          $ref: "#/components/schemas/uint64"
        direction:
          type: string
        src_workchain_id:
          type: integer
          format: int32
        src:
          type: string
        src_uf:
          type: string
          description: User-friendly source address.
        dest_workchain_id:
          type: integer
          format: int32
        dest:
          type: string
        dest_uf:
          type: string
          description: User-friendly destination address.
        value_nanograms:
          type: string
        fwd_fee_nanograms:
          type: string
        ihr_fee_nanograms:
          type: string
        import_fee_nanograms:
          type: string
        bounce:
          type: integer
          format: int32
        bounced:
          type: integer
          format: int32
        body:
          type: string

    AccountMessageResponse:
      type: object
      properties:
        scroll_id:
          type: string
        messages:
          type: array
          items:
            $ref: "#/components/schemas/AccountMessage"

    BlockId:
      description: Block ID
      type: object
      required:
        - workchain_id
        - shard
        - seq_no
      properties:
        workchain_id:
          type: integer
          format: int32
          description: Workchain ID
        shard:
          description: Shard DEC
          $ref: "#/components/schemas/uint64"
        seq_no:
          description: Sequence number
          $ref: "#/components/schemas/uint64"

    BlockIdString:
      description: "Block ID string in format: (WorkchainId,ShardHEX,SeqNo)"
      type: string

    ShardBlock:
      description: Shard block
      type: object
      required:
        - workchain_id
        - shard
        - seq_no
      properties:
        workchain_id:
          type: integer
          format: int32
          description: Workchain ID
        shard:
          description: Shard DEC
          $ref: "#/components/schemas/uint64"
        seq_no:
          description: Sequence number
          $ref: "#/components/schemas/uint64"

    ShardBlocksRange:
      description: Shard blocks range
      type: object
      required:
        - master_seq
        - workchain_id
        - shard
        - from_seq
        - to_seq
      properties:
        master_seq:
          description: Master block sequence number
          $ref: "#/components/schemas/uint64"
        workchain_id:
          type: integer
          format: int32
          description: Workchain ID
        shard:
          description: Shard DEC
          $ref: "#/components/schemas/uint64"
        from_seq:
          description: From sequence number
          $ref: "#/components/schemas/uint64"
        to_seq:
          description: From sequence number
          $ref: "#/components/schemas/uint64"

    BlockInfo:
      description: Block info
      type: object
      required:
        - shard
        - seq_no
        - prev_seq_no
        - next_seq_no
        - min_ref_mc_seqno
        - prev_key_block_seqno
        - gen_catchain_seqno
        - gen_utime
        - start_lt
        - end_lt
      properties:
        workchain_id:
          type: integer
          format: int32
          description: Workchain ID
        shard:
          description: Shard DEC
          $ref: "#/components/schemas/uint64"
        seq_no:
          description: Sequence number
          $ref: "#/components/schemas/uint64"
        prev_seq_no:
          description: Previous sequence number
          $ref: "#/components/schemas/uint64"
        next_seq_no:
          description: Next sequence number
          $ref: "#/components/schemas/uint64"
        root_hash:
          type: string
          description: root_hash
        file_hash:
          type: string
          description: file_hash
        min_ref_mc_seqno:
          description: min_ref_mc_seqno
          $ref: "#/components/schemas/uint64"
        prev_key_block_seqno:
          description: prev_key_block_seqno
          $ref: "#/components/schemas/uint64"
        gen_catchain_seqno:
          description: gen_catchain_seqno
          $ref: "#/components/schemas/uint64"
        gen_utime:
          description: gen_utime
          $ref: "#/components/schemas/uint64"
        prev1_ref:
          $ref: "#/components/schemas/BlockRef"
        prev2_ref:
          $ref: "#/components/schemas/BlockRef"
        master_ref:
          $ref: "#/components/schemas/BlockRef"
        start_lt:
          description: start_lt
          $ref: "#/components/schemas/uint64"
        end_lt:
          description: end_lt
          $ref: "#/components/schemas/uint64"
        version:
          type: integer
          format: int32
          description: version
        flags:
          type: integer
          description: flags
        key_block:
          type: boolean
          description: key_block
        not_master:
          type: boolean
          description: not_master
        want_merge:
          type: boolean
          description: want_merge
        want_split:
          type: boolean
          description: want_split
        after_merge:
          type: boolean
          description: after_merge
        after_split:
          type: boolean
          description: after_split
        before_split:
          type: boolean
          description: before_split
        value_flow:
          $ref: "#/components/schemas/ValueFlow"
        block_stats:
          $ref: "#/components/schemas/BlockStats"

    BlockStats:
      description: Block stats
      type: object
      required:
        - sent_nanograms
        - trx_total_fees_nanograms
        - msg_ihr_fee_nanograms
        - msg_import_fee_nanograms
        - msg_fwd_fee_nanograms
      properties:
        trx_count:
          type: integer
          format: int32
        msg_count:
          type: integer
          format: int32
        sent_nanograms:
          $ref: "#/components/schemas/uint64"
        trx_total_fees_nanograms:
          $ref: "#/components/schemas/uint64"
        msg_ihr_fee_nanograms:
          $ref: "#/components/schemas/uint64"
        msg_import_fee_nanograms:
          $ref: "#/components/schemas/uint64"
        msg_fwd_fee_nanograms:
          $ref: "#/components/schemas/uint64"

    ValueFlow:
      description: Value flow
      type: object
      required:
        - from_prev_blk
        - to_next_block
        - imported
        - exported
        - fees_collected
        - fees_imported
        - recovered
        - created
        - minted
      properties:
        from_prev_blk:
          $ref: "#/components/schemas/uint64"
        to_next_blk:
          $ref: "#/components/schemas/uint64"
        imported:
          $ref: "#/components/schemas/uint64"
        exported:
          $ref: "#/components/schemas/uint64"
        fees_collected:
          $ref: "#/components/schemas/uint64"
        fees_imported:
          $ref: "#/components/schemas/uint64"
        recovered:
          $ref: "#/components/schemas/uint64"
        created:
          $ref: "#/components/schemas/uint64"
        minted:
          $ref: "#/components/schemas/uint64"

    BlockRef:
      description: Block ref
      type: object
      required:
        - end_lt
        - seq_no
      properties:
        end_lt:
          description: end_lt
          $ref: "#/components/schemas/uint64"
        seq_no:
          description: seq_no
          $ref: "#/components/schemas/uint64"
        file_hash:
          type: string
          description: file_hash
        root_hash:
          type: string
          description: root_hash

    Transaction:
      description: Transaction
      type: object
      required:
        - account_addr
        - account_addr_uf
        - workchain_id
        - now
        - is_tock
      properties:
        workchain_id:
          type: integer
          format: int32
          description: Workchain ID
        shard:
          description: Shard DEC
          $ref: "#/components/schemas/uint64"
        seq_no:
          description: Sequence number
          $ref: "#/components/schemas/uint64"
        hash:
          type: string
          description: Transaction hash
        type:
          type: string
          description: Transaction type
        lt:
          description: lt
          $ref: "#/components/schemas/uint64"
        now:
          description: now
          $ref: "#/components/schemas/uint64"
        is_tock:
          type: boolean
        total_nanograms:
          description: total_nanograms
          $ref: "#/components/schemas/uint64"
        total_fees_nanograms:
          description: total_fees_nanograms
          $ref: "#/components/schemas/uint64"
        total_fees_nanograms_len:
          type: integer
          format: int32
          description: total_fees_nanograms_len
        account_addr:
          type: string
          description: account_addr
        account_addr_uf:
          type: string
          description: User-friendly account address.
        orig_status:
          type: string
          description: orig_status
        end_status:
          type: string
          description: end_status
        prev_trans_lt:
          description: prev_trans_lt
          $ref: "#/components/schemas/uint64"
        prev_trans_hash:
          type: string
          description: prev_trans_hash
        state_update_new_hash:
          type: string
          description: state_update_new_hash
        state_update_old_hash:
          type: string
          description: state_update_old_hash
        aborted:
          type: boolean
        destroyed:
          type: boolean
        credit_first:
          type: boolean
        action_phase:
          $ref: "#/components/schemas/ActionPhase"
        compute_phase:
          $ref: "#/components/schemas/ComputePhase"
        storage_phase:
          $ref: "#/components/schemas/StoragePhase"
        credit_phase:
          $ref: "#/components/schemas/CreditPhase"
        in_msg:
          $ref: "#/components/schemas/TransactionMessage"
        out_msgs:
          type: array
          items:
            $ref: "#/components/schemas/TransactionMessage"
          description: Out messages

    TransactionMessage:
      description: Transaction message
      type: object
      required:
        - bounce
        - bounced
        - ihr_disabled
        - type
        - init
        - created_at
        - created_lt
        - value_nanograms
        - fwd_fee_nanograms
        - ihr_fee_nanograms
        - import_fee_nanograms
        - value_nanograms_len
        - fwd_fee_nanograms_len
        - ihr_fee_nanograms_len
        - import_fee_nanograms_len
      properties:
        trx_hash:
          type: string
          description: Message type
        type:
          type: string
          description: Message type
        init:
          type: string
          description: init
        bounce:
          type: boolean
          description: bounce
        bounced:
          type: boolean
          description: bounced
        created_at:
          description: created_at
          $ref: "#/components/schemas/uint64"
        created_lt:
          description: created_lt
          $ref: "#/components/schemas/uint64"
        value_nanograms:
          description: value_nanograms
          $ref: "#/components/schemas/uint64"
        value_nanograms_len:
          type: integer
          format: int32
          description: value_nanograms_len
        fwd_fee_nanograms:
          description: fwd_fee_nanograms
          $ref: "#/components/schemas/uint64"
        fwd_fee_nanograms_len:
          type: integer
          format: int32
          description: fwd_fee_nanograms_len
        ihr_disabled:
          type: boolean
          description: ihr_disabled
        ihr_fee_nanograms:
          description: ihr_fee_nanograms
          $ref: "#/components/schemas/uint64"
        ihr_fee_nanograms_len:
          type: integer
          format: int32
          description: ihr_fee_nanograms_len
        import_fee_nanograms:
          description: import_fee_nanograms
          $ref: "#/components/schemas/uint64"
        import_fee_nanograms_len:
          type: integer
          format: int32
          description: import_fee_nanograms_len
        dest:
          $ref: "#/components/schemas/AddrStd"
        src:
          $ref: "#/components/schemas/AddrStd"
        body_type:
          type: string
          description: Body type
        body_value:
          type: string
          description: Body value

    AddrStd:
      description: Addr
      type: object
      required:
        - is_empty
        - workchain_id
        - addr
        - addr_uf
        - anycast
      properties:
        is_empty:
          type: boolean
          description: Is empty
        workchain_id:
          type: integer
          format: int32
          description: Workchain ID
        addr:
          type: string
          description: Addr HEX
        addr_uf:
          type: string
          description: User-friendly account address.
        anycast:
          type: string
          description: anycast

    ActionPhase:
      description: Action phase
      type: object
      properties:
        success:
          type: boolean
        valid:
          type: boolean
        no_funds:
          type: boolean
        code_changed:
          type: boolean
        action_list_invalid:
          type: boolean
        acc_delete_req:
          type: boolean
        acc_status_change:
          type: string
        total_fwd_fees:
          $ref: "#/components/schemas/uint64"
        total_action_fees:
          $ref: "#/components/schemas/uint64"
        result_code:
          type: integer
          format: int32
        result_arg:
          type: integer
          format: int32
        tot_actions:
          type: integer
          format: int64
        spec_actions:
          type: integer
          format: int64
        skipped_actions:
          type: integer
          format: int64
        msgs_created:
          type: integer
          format: int64
        remaining_balance:
          $ref: "#/components/schemas/uint64"
        reserved_balance:
          $ref: "#/components/schemas/uint64"
        end_lt:
          $ref: "#/components/schemas/uint64"
        tot_msg_bits:
          $ref: "#/components/schemas/uint64"
        tot_msg_cells:
          $ref: "#/components/schemas/uint64"

    ComputePhase:
      description: Compute phase
      type: object
      properties:
        skipped:
          type: boolean
        skipped_reason:
          type: string
        account_activated:
          type: boolean
        success:
          type: boolean
        msg_state_used:
          type: boolean
        out_of_gas:
          type: boolean
        accepted:
          type: boolean
        exit_arg:
          type: integer
          format: int32
        exit_code:
          type: integer
          format: int32
        mode:
          type: integer
          format: int32
        vm_steps:
          type: integer
          format: int64
        gas_used:
          $ref: "#/components/schemas/uint64"
        gas_max:
          $ref: "#/components/schemas/uint64"
        gas_credit:
          $ref: "#/components/schemas/uint64"
        gas_limit:
          $ref: "#/components/schemas/uint64"
        gas_fees:
          $ref: "#/components/schemas/uint64"

    StoragePhase:
      description: Storage phase
      type: object
      properties:
        status:
          type: string
        fees_collected:
          $ref: "#/components/schemas/uint64"
        fees_due:
          $ref: "#/components/schemas/uint64"

    CreditPhase:
      description: Credit phase
      type: object
      properties:
        due_fees_collected:
          $ref: "#/components/schemas/uint64"
        credit_nanograms:
          $ref: "#/components/schemas/uint64"

    AccountWhale:
      description: ""
      type: object
      required:
        - addr_raw
        - addr_uf
        - balance_nanogram
        - balance_percentage_of_total
      properties:
        addr_raw:
          type: string
          description: Raw whale account address.
        addr_uf:
          type: string
          description: User-friendly whale account address.
        balance_nanogram:
          description: Account balance in nanograms.
          $ref: "#/components/schemas/uint64"
        balance_percentage_of_total:
          type: number
          format: double
          description: Ratio of this accounts balance to total nanograms.

    AddrTopByMessageCountResponse:
      description: ""
      type: object
      properties:
        top_in:
          type: array
          items:
            $ref: "#/components/schemas/AddrCount"
        top_out:
          type: array
          items:
            $ref: "#/components/schemas/AddrCount"

    AddrCount:
      description: ""
      type: object
      required:
        - addr
        - addr_uf
      properties:
        workchain_id:
          type: integer
          format: int32
        addr:
          type: string
        addr_uf:
          type: string
          description: User-friendly account address.
        count:
          type: integer
          format: int64

    MessageFeedResponse:
      type: object
      required:
        - scroll_id
        - messages
      properties:
        scroll_id:
          type: string
        messages:
          type: array
          items:
            $ref: "#/components/schemas/MessageFeed"

    TransactionsFeedResponse:
      type: object
      required:
        - scroll_id
        - transactions
      properties:
        scroll_id:
          type: string
        transactions:
          type: array
          items:
            $ref: "#/components/schemas/TransactionsFeed"

    MessageFeed:
      description: ""
      type: object
      required:
        - workchain_id
        - shard
        - seq_no
        - lt
        - time
        - message_lt
        - trx_hash
        - direction
        - src_workchain_id
        - src
        - src_uf
        - dest_workchain_id
        - dest
        - dest_uf
        - value_nanogram
        - total_fee_nanogram
        - bounce
        - body
      properties:
        workchain_id:
          type: integer
          format: int32
        shard:
          $ref: "#/components/schemas/uint64"
        seq_no:
          $ref: "#/components/schemas/uint64"
        lt:
          $ref: "#/components/schemas/uint64"
        time:
          $ref: "#/components/schemas/uint64"
        message_lt:
          $ref: "#/components/schemas/uint64"
        trx_hash:
          type: string
        direction:
          type: string
        src_workchain_id:
          type: integer
          format: int32
        src:
          type: string
        src_uf:
          type: string
          description: User-friendly source account address.
        dest_workchain_id:
          type: integer
          format: int32
        dest:
          type: string
        dest_uf:
          type: string
          description: User-friendly destination account address.
        value_nanogram:
          $ref: "#/components/schemas/uint64"
        total_fee_nanogram:
          $ref: "#/components/schemas/uint64"
        bounce:
          type: boolean
        body:
          type: string

    TransactionsFeed:
      description: ""
      type: object
      required:
        - workchain_id
        - shard
        - seq_no
        - time
        - is_tock
        - lt
        - msg_in_created_lt
        - trx_hash
        - type
        - msg_in_type
        - src_uf
        - src_workchain_id
        - account_addr
        - account_addr_uf
        - src
        - dest_uf
        - dest_workchain_id
        - dest
        - total_nanograms
        - total_fees_nanograms
        - total_fwd_fee_nanograms
        - total_ihr_fee_nanograms
        - total_import_fee_nanograms
      properties:
        workchain_id:
          type: integer
          format: int32
        shard:
          $ref: "#/components/schemas/uint64"
        seq_no:
          $ref: "#/components/schemas/uint64"
        time:
          $ref: "#/components/schemas/uint64"
        is_tock:
          type: integer
        lt:
          $ref: "#/components/schemas/uint64"
        msg_in_created_lt:
          $ref: "#/components/schemas/uint64"
        trx_hash:
          type: string
        type:
          type: string
        msg_in_type:
          type: string
        src_uf:
          type: string
        src_workchain_id:
          type: integer
          format: int32
        account_addr:
          type: string
        account_addr_uf:
          type: string
        src:
          type: string
        dest_uf:
          type: string
        dest_workchain_id:
          type: integer
          format: int32
        dest:
          type: string
        total_nanograms:
          $ref: "#/components/schemas/uint64"
        total_fees_nanograms:
          $ref: "#/components/schemas/uint64"
        total_fwd_fee_nanograms:
          $ref: "#/components/schemas/uint64"
        total_ihr_fee_nanograms:
          $ref: "#/components/schemas/uint64"
        total_import_fee_nanograms:
          $ref: "#/components/schemas/uint64"

    MessagesByTypeResult:
      description: ""
      type: object
      required:
        - rows
      properties:
        rows:
          type: array
          items:
            $ref: "#/components/schemas/MessagesByTypeTimeseries"

    MessagesByTypeTimeseries:
      type: object
      required:
        - workchain_id
        - type
        - time
        - messages_count
      properties:
        workchain_id:
          description: workchain_id
          type: integer
          format: int32
        type:
          description: type
          type: string
        msg_type:
          description: Msg type
          type: string
        time:
          $ref: "#/components/schemas/uint64Array"
        messages_count:
          $ref: "#/components/schemas/uint64Array"

    VolumeByGramsResult:
      description: ""
      type: object
      required:
        - rows
      properties:
        rows:
          type: array
          items:
            $ref: "#/components/schemas/VolumeByGramsTimeseries"

    VolumeByGramsTimeseries:
      type: object
      required:
        - workchain_id
        - time
        - volume_grams
      properties:
        workchain_id:
          description: workchain_id
          type: integer
          format: int32
        time:
          $ref: "#/components/schemas/uint64Array"
        volume_grams:
          $ref: "#/components/schemas/stringArray"

    MessagesOrdCountResult:
      description: ""
      type: object
      required:
        - rows
      properties:
        rows:
          type: array
          items:
            $ref: "#/components/schemas/MessagesOrdCountTimeseries"

    MessagesOrdCountTimeseries:
      type: object
      required:
        - workchain_id
        - time
        - count
      properties:
        workchain_id:
          description: workchain_id
          type: integer
          format: int32
        time:
          $ref: "#/components/schemas/uint64Array"
        count:
          $ref: "#/components/schemas/uint64Array"

    TimeseriesBlocksByWorkchain:
      description: ""
      type: object
      required:
        - time
        - masterchain
        - workchain0
      properties:
        time:
          $ref: "#/components/schemas/uint64Array"
        masterchain:
          $ref: "#/components/schemas/uint64Array"
        workchain0:
          $ref: "#/components/schemas/uint64Array"

    GlobalMetrics:
      description: ""
      type: object
      required:
        - total_addr
        - total_nanogram
        - total_blocks
        - total_messages
        - total_transactions
      properties:
        total_addr:
          description: Total number of addresses
          type: integer
          format: int64
        total_nanogram:
          $ref: "#/components/schemas/uint64"
          description: Total number of nanograms
        total_blocks:
          description: Total number of blocks
          $ref: "#/components/schemas/uint64"
        total_messages:
          description: Total number of messages
          $ref: "#/components/schemas/uint64"
        total_transactions:
          description: Total number of transactions
          $ref: "#/components/schemas/uint64"

    TrxMetrics:
      description: ""
      type: object
      required:
        - trx_last_day
        - trx_last_month
      properties:
        trx_last_day:
          description: "Total number of transactions for last 24 hours"
          type: integer
          format: int64
        trx_last_month:
          description: "Total number of transactions for last month"
          type: integer
          format: int64

    BlocksMetrics:
      description: ""
      type: object
      required:
        - total_blocks
        - blocks_height
        - avg_block_time
      properties:
        total_blocks:
          $ref: "#/components/schemas/uint64"
          description: Total number of blocks
        blocks_height:
          $ref: "#/components/schemas/uint64"
          description: Maximum SeqNo
        avg_block_time:
          description: Average time between blocks
          type: number
          format: double

    AddressesMetrics:
      description: ""
      type: object
      required:
        - total_addr
        - total_nanogram
        - daily_active
        - monthly_active
      properties:
        total_addr:
          description: Total number of addresses
          type: integer
          format: int64
        total_nanogram:
          $ref: "#/components/schemas/uint64"
          description: Total number of nanograms
        daily_active:
          description: Daily active accounts
          type: integer
          format: int64
        monthly_active:
          description: Monthly active accounts
          type: integer
          format: int64

    MessagesMetrics:
      description: ""
      type: object
      required:
        - total_transactions
        - total_messages
        - tps
        - mps
      properties:
        total_transactions:
          $ref: "#/components/schemas/uint64"
          description: Total number of transactions
        total_messages:
          $ref: "#/components/schemas/uint64"
          description: Total number of messages
        tps:
          description: Transactions per second
          type: number
          format: double
        mps:
          description: Messages per second
          type: number
          format: double

    stringArray:
      description: String array type
      type: array
      items:
        type: string

    int64Array:
      description: Int64 array type
      type: array
      items:
        type: integer
        format: int64

    uint64Array:
      description: Uint64 array type
      type: array
      items:
        $ref: "#/components/schemas/uint64"

    SearchResult:
      type: object
      required:
        - type
        - hint
        - link
      properties:
        type:
          description: Search result type
          type: string
        hint:
          description: Search hint
          type: string
        link:
          description: API link
          type: string

    error:
      type: object
      required:
        - message
      properties:
        error:
          type: boolean
          description: Error
        message:
          type: string
          description: Error message

paths:
  /v1/height/synced:
    get:
      summary: Get synced height
      description: Get synced master height
      tags:
        - core
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockId"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/height/blockchain:
    get:
      summary: Get blockchain height
      description: Get master blockchain height
      tags:
        - core
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockId"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/master/block/shards/range:
    get:
      summary: Get master block shards range
      description: "Get master block shards range. You can set multiply block_master's like: ?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)"
      tags:
        - core
      parameters:
        - name: block_master
          in: query
          required: true
          description: "Master Block ID string in format: (WorkchainId,ShardHEX,SeqNo). You can set multiply block_master's."
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShardBlocksRange"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/master/block/shards/actual:
    get:
      summary: Get master block actual shards
      description: "Get master block actual shards. You can set multiply block_master's like: ?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)"
      tags:
        - core
      parameters:
        - name: block_master
          in: query
          required: true
          description: "Master Block ID string in format: (WorkchainId,ShardHEX,SeqNo). You can set multiply block_master's."
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShardBlock"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/workchain/block/master:
    get:
      summary: Get master block by workchain block
      description: Get master block by workchain block.
      tags:
        - core
      parameters:
        - name: block
          in: query
          required: true
          description: "Block ID string in format: (WorkchainId,ShardHEX,SeqNo)"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlockId"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/block/info:
    get:
      summary: Get block info
      tags:
        - core
      description: >
        Get block info by filters. <br>
        This method is available by following paths: /v1/block/info, /v1/blocks/info, /v1/b/info <br>
        <b style='color: red;'>You should</b> set at least one of: <b>block</b>, <b>block_master</b>, (<b>block_from</b>, <b>block_to</b>)<br>
        You can set multiply <b>block</b>'s like:
        <pre style='font-size:11px;'>?block=(-1,8000000000000000,100000)&block=(0,6000000000000000,1097422)</pre>
        You can set multiply <b>block_master</b>'s like:
        <pre style='font-size:11px;'>?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)</pre>
      parameters:
        - name: block
          in: query
          description: "Block ID strings in format:
                  (WorkchainId,ShardHEX,SeqNo)"
          schema:
            type: array
            items:
              type: string
        - name: block_master
          in: query
          description: "Master Block ID strings in format:
                  (WorkchainId,ShardHEX,SeqNo). Search only in shards
                  block."
          schema:
            type: array
            items:
              type: string
        - name: block_from
          in: query
          description: "Block range from. Block ID string in format:
                  (WorkchainId,ShardHEX,SeqNo)"
          schema:
            type: string
        - name: block_to
          in: query
          description: "Block range to. Block ID string in format:
                  (WorkchainId,ShardHEX,SeqNo)"
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlockInfo"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /v1/block/tlb:
    get:
      summary: Get block in TL-B format
      tags:
        - core
      description: >
        Get block in TL-B format. <br>
      parameters:
        - name: block
          in: query
          description: "Block ID string in format:
              (WorkchainId,ShardHEX,SeqNo)"
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                description: return block in TL-B binary format
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/block/transactions:
    get:
      summary: Get block transactions
      tags:
        - core
      description: >
        Get block transactions by filters. <br>
        This method is available by following paths: /v1/block/transactions, /v1/blocks/transactions, /v1/b/transactions <br>
        <b style='color: red;'>You should</b> set at least one of: <b>block</b>, <b>block_master</b>, (<b>block_from</b>, <b>block_to</b>)<br>
        You can set multiply <b>block</b>'s like:
        <pre style='font-size:11px;'>?block=(-1,8000000000000000,100000)&block=(0,6000000000000000,1097422)</pre>
        You can set multiply <b>block_master</b>'s like:
        <pre style='font-size:11px;'>?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)</pre>
        You can set multiply <b>addr</b>'s like:
        <pre style='font-size:11px;'>?addr=ADDR_1&addr=ADDR_2</pre>
      parameters:
        - name: block
          in: query
          description: "Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
          schema:
            type: array
            items:
              type: string
        - name: block_master
          in: query
          description: "Master Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>. Search only in shards block."
          schema:
            type: array
            items:
              type: string
        - name: block_from
          in: query
          description: "Block range from. Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
          schema:
            type: string
        - name: block_to
          in: query
          description: "Block range to. Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
          schema:
            type: string
        - name: dir
          in: query
          description: Message dir
          schema:
            type: string
            enum:
              - in
              - out
        - name: addr
          in: query
          description: "Message addr. Search in MessageSrcAddr AND MessageDestAddr. You can set multiple <b>addr</b>'s. Accepts <b>addr</b>'s in both raw and user-friendly format."
          schema:
            type: array
            items:
              type: string
        - name: message_type
          in: query
          description: Message type
          schema:
            type: array
            items:
              type: string
        - name: type
          in: query
          description: Transaction type
          schema:
            type: array
            items:
              type: string
        - name: hash
          in: query
          description: Transaction hash
          schema:
            type: array
            items:
              type: string
        - name: lt
          in: query
          description: Logical Time
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/transaction:
    get:
      summary: Get transaction
      tags:
        - core
      description: >
        Get transaction by hash.
      parameters:
        - name: hash
          in: query
          description: Transaction hash
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/account:
    get:
      summary: Get account
      tags:
        - core
      description: >
        Get account by address. Both raw and user-friendly addresses formats supported. <br>
        This method is available by following paths: /v1/account, /v1/address, /v1/a
      parameters:
        - name: address
          in: query
          required: true
          description: Account address (both raw and user-friendly addresses formats
            supported).
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/account/qr:
    get:
      summary: Get account QR code
      tags:
        - main
      description: >
        Get account QR code with link by address. Both raw and user-friendly addresses formats supported. <br>
        This method is available by following paths: /v1/account, /v1/address, /v1/a
      parameters:
        - name: address
          in: query
          required: true
          description: "Account address (both raw and user-friendly addresses formats supported)."
          schema:
            type: string
        - name: format
          in: query
          description: Image format png or png_base64
          schema:
            type: string
            enum:
              - png
              - png_base64
      responses:
        "200":
          description: QR code png
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/account/messages:
    get:
      summary: Get account messages
      tags:
        - core
      description: >
        Get account messages <br>
        This method is available by following paths: /v1/account/messages, /v1/address/messages, /v1/a/messages
      parameters:
        - name: address
          in: query
          required: true
          description: Account address (both raw and user-friendly addresses formats
            supported).
          schema:
            type: string
        - name: scroll_id
          in: query
          description: Get transactions before lt
          schema:
            type: string
        - name: limit
          in: query
          description: Limit transactions
          schema:
            type: integer
            default: 30
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountMessageResponse"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/blocks/feed:
    get:
      summary: Get blocks feed
      tags:
        - core
      description: >
        Get blocks feed <br>
        This method is available by following paths: /v1/block/feed, /v1/blocks/feed, /v1/b/feed
      parameters:
        - name: scroll_id
          in: query
          description: Scroll ID
          schema:
            type: string
        - name: limit
          in: query
          description: Limit blocks
          schema:
            type: integer
            default: 30
        - name: workchain_id
          in: query
          description: Workchain Id filter
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlocksFeedResponse"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/timeseries/blocks-by-workchain:
    get:
      summary: Blocks by workchain
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeseriesBlocksByWorkchain"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/timeseries/messages-by-type:
    get:
      summary: Messages by type
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagesByTypeResult"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/timeseries/volume-by-grams:
    get:
      summary: Volume by grams
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeByGramsResult"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/timeseries/messages-ord-count:
    get:
      summary: Messages ord count
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagesOrdCountResult"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/messages/feed:
    get:
      summary: Messages feed
      tags:
        - core
      description: ""
      parameters:
        - name: scroll_id
          in: query
          description: Scroll ID
          schema:
            type: string
        - name: limit
          in: query
          description: Limit messages
          schema:
            type: integer
            default: 50
        - name: workchain_id
          in: query
          description: Workchain Id filter
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageFeedResponse"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/message/get:
    get:
      summary: Get message
      tags:
        - core
      description: Get message by transaction hash and message logical time
      parameters:
        - name: trx_hash
          in: query
          description: Transaction hash
          required: true
          schema:
            type: string
        - name: message_lt
          in: query
          description: Message logical time
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionMessage"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/transactions/feed:
    get:
      summary: Transactions feed
      description: ""
      tags:
        - core
      parameters:
        - name: scroll_id
          in: query
          description: Scroll ID
          schema:
            type: string
        - name: limit
          in: query
          description: Limit messages
          schema:
            type: integer
            format: int32
            default: 50
        - name: workchain_id
          in: query
          description: Workchain Id filter
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionsFeedResponse"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/addr/top-by-message-count:
    get:
      summary: Top account by message in/out
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddrTopByMessageCountResponse"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/top/whales:
    get:
      summary: Top whales accounts by gram amount held
      tags:
        - main
      description: ""
      parameters:
        - name: workchain_id
          in: query
          description: Get top whales for specific WorckchainId. Do not specify to get
            workchain agnostic stats.
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Get top whales with limit. Do not specify to get first 50 whales.
          schema:
            type: integer
            format: int64
            default: 50
        - name: offset
          in: query
          description: Get top whales with offset. Do not specify to get first whales (with no offset applied).
          schema:
            type: integer
            format: int64
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountWhale"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/stats/global:
    get:
      summary: Get some global blockchain metrics
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalMetrics"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/stats/blocks:
    get:
      summary: Get blocks metrics
      tags:
        - main
      description: ""
      parameters:
        - name: workchain_id
          in: query
          description: Get stats for specific WorckchainId. Do not specify to get workchain agnostic stats.
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlocksMetrics"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/stats/addresses:
    get:
      summary: Get addresses metrics
      tags:
        - main
      description: ""
      parameters:
        - name: workchain_id
          in: query
          description: Get stats for specific WorckchainId. Do not specify to get workchain agnostic stats.
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressesMetrics"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/stats/messages:
    get:
      summary: Get messages metrics
      tags:
        - main
      description: ""
      parameters:
        - name: workchain_id
          in: query
          description: Get stats for specific WorckchainId. Do not specify to get workchain agnostic stats.
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessagesMetrics"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/stats/transactions:
    get:
      summary: "Get transactions metrics"
      tags:
        - main
      description: ""
      parameters:
        - name: workchain_id
          in: query
          schema:
            type: string
            default: ""
          description: "Get stats for specific WorckchainId. Do not specify to get workchain agnostic stats."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrxMetrics"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

  /v1/search:
    get:
      summary: Search
      tags:
        - core
      description: Search between blocks, transactions, accounts, messages
      parameters:
        - name: q
          in: query
          required: true
          description: Query string (full block fromat, account addr user uf/raw, block height, any hash)
          schema:
            type: string
            default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResult"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"


  /v1/timeseries/sent-and-fees:
    get:
      summary: "Average sent and fees in nanograms for all blocks of every day for last 30 days"
      tags:
        - main
      description: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SentAndFees"
        default:
          description: generic error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
