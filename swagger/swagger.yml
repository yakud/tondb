---
consumes:
- application/json
info:
  description: This API provides a number of methods to retrieve historical data across multiple dimensions of the TON blockchain.
  title: TON Blockchain History APIs
  version: 0.0.1
  x-logo:
    url: "/TENGRAM_logo.svg"
    altText: "Tengram"
produces:
- application/json
schemes:
- https
swagger: "2.0"
basePath: /
host: api.tengram.com

definitions:
  Account:
    description: "Account"
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
      shard:
        type: integer
        format: int64
      seq_no:
        type: integer
        format: int64
      addr:
        type: string
      addr_uf:
        type: string
        description: "User-friendly account address."
      status:
        type: string
      balance_nanogram:
        type: integer
        format: int64
      tick:
        type: integer
        format: int64
      tock:
        type: integer
        format: int64
      storage_used_bits:
        type: integer
        format: int64
      storage_used_cells:
        type: integer
        format: int64
      storage_used_public_cells:
        type: integer
        format: int64
      last_trans_hash:
        type: string
      last_trans_lt:
        type: integer
        format: int64
      last_trans_lt_storage:
        type: integer
        format: int64
      last_paid:
        type: integer
        format: int64

  BlocksFeedResponse:
    type: object
    properties:
      scroll_id:
        type: string
      blocks:
        type: array
        items:
          $ref: '#/definitions/BlockInFeed'

  BlockInFeed:
    description: "Block in feed"
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
      shard:
        type: integer
        format: int64
      seq_no:
        type: integer
        format: int64
      time:
        type: integer
        format: int64
      start_lt:
        type: integer
        format: int64
      total_fees_nanograms:
        type: integer
        format: int64
      root_hash:
        type: string
      trx_count:
        type: integer
        format: int64
      value_nanograms:
        type: integer
        format: int64
      ihr_fee_nanograms:
        type: integer
        format: int64
      import_fee_nanograms:
        type: integer
        format: int64
      fwd_fee_nanograms:
        type: integer
        format: int64

  AccountTransaction:
    description: "Account transaction"
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
      shard:
        type: string
      seq_no:
        type: integer
        format: int64
      account_addr:
        type: string
      account_addr_uf:
        type: string
        description: "User-friendly account address."
      lt:
        type: integer
        format: int64
      time:
        type: integer
        format: int64
      type:
        type: string
      message_type:
        type: string
      message_lt:
        type: integer
        format: int64
      direction:
        type: string
      src_workchain_id:
        type: integer
        format: int32
      src:
        type: string
      src_uf:
        type: string
        description: "User-friendly source address."
      dest_workchain_id:
        type: integer
        format: int32
      dest:
        type: string
      dest_uf:
        type: string
        description: "User-friendly destination address."
      value_nanograms:
        type: string
      fwd_fee_nanograms:
        type: string
      ihr_fee_nanograms:
        type: string
      import_fee_nanograms:
        type: string
      bounce:
        type: integer
        format: int32
      bounced:
        type: integer
        format: int32

  BlockId:
    description: "Block ID"
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
        description: "Workchain ID"
      shard:
        type: integer
        format: int64
        description: "Shard DEC"
      seq_no:
        type: integer
        format: int64
        description: "Sequence number"

  BlockIdString:
    description: "Block ID string in format: (WorkchainId,ShardHEX,SeqNo)"
    type: string

  ShardBlocksRange:
    description: "Shard blocks range"
    type: object
    properties:
      master_seq:
        type: integer
        format: int64
        description: "Master block sequence number"
      workchain_id:
        type: integer
        format: int32
        description: "Workchain ID"
      shard:
        type: integer
        format: int64
        description: "Shard DEC"
      from_seq:
        type: integer
        format: int64
        description: "From sequence number"
      to_seq:
        type: integer
        format: int64
        description: "From sequence number"

  BlockInfo:
    description: "Block info"
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
        description: "Workchain ID"
      shard:
        type: integer
        format: int64
        description: "Shard DEC"
      seq_no:
        type: integer
        format: int64
        description: "Sequence number"
      root_hash:
        type: string
        description: "root_hash"
      file_hash:
        type: string
        description: "file_hash"
      min_ref_mc_seqno:
        type: integer
        format: int64
        description: "min_ref_mc_seqno"
      prev_key_block_seqno:
        type: integer
        format: int64
        description: "prev_key_block_seqno"
      gen_catchain_seqno:
        type: integer
        format: int64
        description: "gen_catchain_seqno"
      gen_utime:
        type: integer
        format: int64
        description: "gen_utime"
      prev1_ref:
        $ref: "#/definitions/BlockRef"
        description: "prev1_ref"
      prev2_ref:
        $ref: "#/definitions/BlockRef"
        description: "prev2_ref"
      master_ref:
        $ref: "#/definitions/BlockRef"
        description: "master_ref"
      start_lt:
        type: integer
        format: int64
        description: "start_lt"
      end_lt:
        type: integer
        format: int64
        description: "end_lt"
      version:
        type: integer
        format: int32
        description: "version"
      flags:
        type: integer
        description: "flags"
      key_block:
        type: boolean
        description: "key_block"
      not_master:
        type: boolean
        description: "not_master"
      want_merge:
        type: boolean
        description: "want_merge"
      want_split:
        type: boolean
        description: "want_split"
      after_merge:
        type: boolean
        description: "after_merge"
      after_split:
        type: boolean
        description: "after_split"
      before_split:
        type: boolean
        description: "before_split"
      value_flow:
        $ref: '#/definitions/ValueFlow'
        description: "Value flow"

  ValueFlow:
    description: "Value flow"
    type: object
    properties:
      from_prev_blk:
        type: integer
        format: int64
      to_next_blk:
        type: integer
        format: int64
      imported:
        type: integer
        format: int64
      exported:
        type: integer
        format: int64
      fees_collected:
        type: integer
        format: int64
      fees_imported:
        type: integer
        format: int64
      recovered:
        type: integer
        format: int64
      created:
        type: integer
        format: int64
      minted:
        type: integer
        format: int64

  BlockRef:
    description: "Block ref"
    type: object
    properties:
      end_lt:
        type: integer
        format: int64
        description: "end_lt"
      seq_no:
        type: integer
        format: int64
        description: "seq_no"
      file_hash:
        type: string
        description: "file_hash"
      root_hash:
        type: string
        description: "root_hash"

  Transaction:
    description: "Transaction"
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
        description: "Workchain ID"
      shard:
        type: integer
        format: int64
        description: "Shard DEC"
      seq_no:
        type: integer
        format: int64
        description: "Sequence number"
      hash:
        type: string
        description: "Transaction hash"
      type:
        type: string
        description: "Transaction type"
      lt:
        type: integer
        format: int64
        description: "lt"
      now:
        type: integer
        format: int64
        description: "now"
      total_fees_nanograms:
        type: integer
        format: int64
        description: "total_fees_nanograms"
      total_fees_nanograms_len:
        type: integer
        format: int32
        description: "total_fees_nanograms_len"
      account_addr:
        type: string
        description: "account_addr"
      account_addr_uf:
        type: string
        description: "User-friendly account address."
      orig_status:
        type: string
        description: "orig_status"
      end_status:
        type: string
        description: "end_status"
      prev_trans_lt:
        type: integer
        format: int64
        description: "prev_trans_lt"
      prev_trans_hash:
        type: string
        description: "prev_trans_hash"
      state_update_new_hash:
        type: string
        description: "state_update_new_hash"
      state_update_old_hash:
        type: string
        description: "state_update_old_hash"
      in_msg:
        $ref: "#/definitions/TransactionMessage"
        description: "In message"
      out_msgs:
        type: array
        items:
          $ref: "#/definitions/TransactionMessage"
        description: "Out messages"

  TransactionMessage:
    description: "Transaction message"
    type: object
    properties:
      type:
        type: string
        description: "Message type"
      init:
        type: string
        description: "init"
      bounce:
        type: boolean
        description: "bounce"
      bounced:
        type: boolean
        description: "bounced"
      created_at:
        type: integer
        format: int64
        description: "created_at"
      created_lt:
        type: integer
        format: int64
        description: "created_lt"
      value_nanograms:
        type: integer
        format: int64
        description: "value_nanograms"
      value_nanograms_len:
        type: integer
        format: int32
        description: "value_nanograms_len"
      fwd_fee_nanograms:
        type: integer
        format: int64
        description: "fwd_fee_nanograms"
      fwd_fee_nanograms_len:
        type: integer
        format: int32
        description: "fwd_fee_nanograms_len"
      ihr_disabled:
        type: boolean
        description: "ihr_disabled"
      ihr_fee_nanograms:
        type: integer
        format: int64
        description: "ihr_fee_nanograms"
      ihr_fee_nanograms_len:
        type: integer
        format: int32
        description: "ihr_fee_nanograms_len"
      import_fee_nanograms:
        type: integer
        format: int64
        description: "import_fee_nanograms"
      import_fee_nanograms_len:
        type: integer
        format: int32
        description: "import_fee_nanograms_len"
      dest:
        $ref: "#/definitions/AddrStd"
        description: "Dest addr"
      src:
        $ref: "#/definitions/AddrStd"
        description: "Src addr"
      body_type:
        type: string
        description: "Body type"
      body_value:
        type: string
        description: "Body value"

  AddrStd:
    description: "Addr"
    type: object
    properties:
      is_empty:
        type: boolean
        description: "Is empty"
      workchain_id:
        type: integer
        format: int32
        description: "Workchain ID"
      addr:
        type: string
        description: "Addr HEX"
      addr_uf:
        type: string
        description: "User-friendly account address."
      anycast:
        type: string
        description: "anycast"

  AccountWhale:
    description: ""
    type: object
    properties:
      addr_raw:
        type: string
        description: "Raw whale account address."
      addr_uf:
        type: string
        description: "User-friendly whale account address."
      balance_gram:
        type: string

  AddrTopByMessageCountResponse:
    description: ""
    type: object
    properties:
      top_in:
        type: array
        items:
          $ref: "#/definitions/AddrCount"
      top_out:
        type: array
        items:
          $ref: "#/definitions/AddrCount"

  AddrCount:
    description: ""
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
      addr:
        type: string
      addr_uf:
        type: string
        description: "User-friendly account address."
      count:
        type: integer
        format: int64

  MessageFeedResponse:
    type: object
    properties:
      scroll_id:
        type: string
      messages:
        type: array
        items:
          $ref: '#/definitions/MessageFeed'

  MessageFeed:
    description: ""
    type: object
    properties:
      workchain_id:
        type: integer
        format: int32
      shard:
        type: integer
        format: int64
      seq_no:
        type: integer
        format: int64
      lt:
        type: integer
        format: int64
      time:
        type: integer
        format: int64
      message_lt:
        type: integer
        format: int64
      trx_hash:
        type: string
      direction:
        type: string
      src_workchain_id:
        type: string
      src:
        type: string
      src_uf:
        type: string
        description: "User-friendly source account address."
      dest_workchain_id:
        type: string
      dest:
        type: string
      dest_uf:
        type: string
        description: "User-friendly destination account address."
      value_nanogram:
        type: integer
      total_fee_nanogram:
        type: integer
      bounce:
        type: boolean

  MessagesByTypeResult:
    description: ""
    type: object
    properties:
      rows:
        type: array
        items:
          $ref: "#/definitions/MessagesByTypeTimeseries"

  MessagesByTypeTimeseries:
    type: object
    properties:
      workchain_id:
        description: "workchain_id"
        type: string
      type:
        description: "type"
        type: string
      time:
        description: "array of timestamps with 5 MINUTE step"
        $ref: "#/definitions/int64Array"
      messages_count:
        description: "array of messages count"
        $ref: "#/definitions/int64Array"

  VolumeByGramsResult:
    description: ""
    type: object
    properties:
      rows:
        type: array
        items:
          $ref: "#/definitions/VolumeByGramsTimeseries"

  VolumeByGramsTimeseries:
    type: object
    properties:
      workchain_id:
        description: "workchain_id"
        type: string
      time:
        description: "array of timestamps with 10 MINUTE step"
        $ref: "#/definitions/int64Array"
      volume_grams:
        description: "array of volume by grams"
        $ref: "#/definitions/stringArray"

  MessagesOrdCountResult:
    description: ""
    type: object
    properties:
      rows:
        type: array
        items:
          $ref: "#/definitions/MessagesOrdCountTimeseries"

  MessagesOrdCountTimeseries:
    type: object
    properties:
      workchain_id:
        description: "workchain_id"
        type: string
      time:
        description: "array of timestamps with 10 MINUTE step"
        $ref: "#/definitions/int64Array"
      count:
        description: "array of msg count"
        $ref: "#/definitions/int64Array"

  TimeseriesBlocksByWorkchain:
    description: ""
    type: object
    properties:
      time:
        description: "array of timestamps with 8 MINUTE step"
        $ref: "#/definitions/int64Array"
      masterchain:
        description: "array count blocks in masterchain"
        $ref: "#/definitions/int64Array"
      workchain0:
        description: "array count blocks in workchain 0"
        $ref: "#/definitions/int64Array"


  GlobalMetrics:
    description: ""
    type: object
    properties:
      total_addr:
        description: "Total number of addresses"
        type: integer
        format: int64
      total_nanogram:
        description: "Total number of nanograms"
        type: integer
        format: int64
      total_blocks:
        description: "Total number of blocks"
        type: integer
        format: int64
      total_messages:
        description: "Total number of messages"
        type: integer
        format: int64

  stringArray:
    description: "String array type"
    type: array
    items:
      type: string

  int64Array:
    description: "Int64 array type"
    type: array
    items:
      type: integer
      format: int64

  error:
    type: object
    required:
      - message
    properties:
      error:
        type: boolean
        description: "Error"
      message:
        type: string
        description: "Error message"

paths:
  /height/synced:
    get:
      summary: "Get synced height"
      description: "Get synced master height"
      tags:
        - core
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BlockId"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /height/blockchain:
    get:
      summary: "Get blockchain height"
      description: "Get master blockchain height"
      tags:
        - core
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BlockId"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /master/block/shards/range:
    get:
      summary: "Get master block shards range"
      description: "Get master block shards range. You can set multiply block_master's like: ?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)"
      tags:
        - core
      parameters:
        - name: block_master
          in: query
          type: string
          required: true
          description: "Master Block ID string in format: (WorkchainId,ShardHEX,SeqNo). You can set multiply block_master's."
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ShardBlocksRange"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /workchain/block/master:
    get:
      summary: "Get master block by workchain block"
      description: "Get master block by workchain block."
      tags:
        - core
      parameters:
        - name: block
          in: query
          type: string
          required: true
          description: "Block ID string in format: (WorkchainId,ShardHEX,SeqNo)"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/BlockId"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /block/info:
    get:
      summary: "Get block info"
      tags:
        - core
      description: >
        Get block info by filters. <br>
        This method is available by following paths: /block/info, /blocks/info, /b/info <br>
        <b style='color: red;'>You should</b> set at least one of: <b>block</b>, <b>block_master</b>, (<b>block_from</b>, <b>block_to</b>)<br>
        You can set multiply <b>block</b>'s like:
        <pre style='font-size:11px;'>?block=(-1,8000000000000000,100000)&block=(0,6000000000000000,1097422)</pre>
        You can set multiply <b>block_master</b>'s like:
        <pre style='font-size:11px;'>?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)</pre>
      parameters:
        - name: block
          in: query
          type: string
          description: "Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
        - name: block_master
          in: query
          type: string
          description: "Master Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>. Search only in shards block."
        - name: block_from
          in: query
          type: string
          description: "Block range from. Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
        - name: block_to
          in: query
          type: string
          description: "Block range to. Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/BlockInfo"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /block/tlb:
    get:
      summary: "Get block in TL-B format"
      tags:
        - core
      description: >
        Get block in TL-B format. <br>
      parameters:
        - name: block
          in: query
          type: string
          description: "Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
      responses:
        200:
          description: OK
          schema:
            type: string
            description: "return block in TL-B binary format"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /block/transactions:
    get:
      summary: "Get block transactions"
      tags:
        - core
      description: >
        Get block transactions by filters. <br>
        This method is available by following paths: /block/transactions, /blocks/transactions, /b/transactions <br>
        <b style='color: red;'>You should</b> set at least one of: <b>block</b>, <b>block_master</b>, (<b>block_from</b>, <b>block_to</b>)<br>
        You can set multiply <b>block</b>'s like:
        <pre style='font-size:11px;'>?block=(-1,8000000000000000,100000)&block=(0,6000000000000000,1097422)</pre>
        You can set multiply <b>block_master</b>'s like:
        <pre style='font-size:11px;'>?block_master=(-1,8000000000000000,100000)&block_master=(-1,8000000000000000,100001)</pre>
        You can set multiply <b>addr</b>'s like:
        <pre style='font-size:11px;'>?addr=ADDR_1&addr=ADDR_2</pre>
      parameters:
        - name: block
          in: query
          type: string
          description: "Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
        - name: block_master
          in: query
          type: string
          description: "Master Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>. Search only in shards block."
        - name: block_from
          in: query
          type: string
          description: "Block range from. Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
        - name: block_to
          in: query
          type: string
          description: "Block range to. Block ID string in format: <b><i>(WorkchainId,ShardHEX,SeqNo)</i></b>"
        - name: dir
          in: query
          type: string
          enum:
            - in
            - out
          description: "Message dir"
        - name: addr
          in: query
          type: string
          description: "Message addr. Search in MessageSrcAddr AND MessageDestAddr. You can set multiple <b>addr</b>'s. Accepts <b>addr</b>'s in both raw and user-friendly format."
        - name: message_type
          in: query
          type: string
          description: "Message type"
        - name: type
          in: query
          type: string
          description: "Transaction type"
        - name: hash
          in: query
          type: string
          description: "Transaction hash"
        - name: lt
          in: query
          type: integer
          format: int64
          description: "Logical Time"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /transaction:
    get:
      summary: "Get transaction"
      tags:
        - core
      description: >
        Get transaction by hash.
      parameters:
        - name: hash
          in: query
          type: string
          description: "Transaction hash"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /account:
    get:
      summary: "Get account"
      tags:
        - core
      description: >
        Get account by address. Both raw and user-friendly addresses formats supported. <br>
        This method is available by following paths: /account, /address, /a
      parameters:
        - name: address
          in: query
          type: string
          required: true
          description: "Account address (both raw and user-friendly addresses formats supported)."
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Account"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /account/qr:
    get:
      summary: "Get account QR code"
      tags:
        - main
      description: >
        Get account QR code with link by address. Both raw and user-friendly addresses formats supported. <br>
        This method is available by following paths: /account, /address, /a
      parameters:
        - name: address
          in: query
          type: string
          required: true
          description: "Account address (both raw and user-friendly addresses formats supported)."
        - name: format
          in: query
          type: string
          enum:
            - png
            - png_base64
          description: "Image format png or png_base64"
      responses:
        200:
          description: QR code png
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /account/transactions:
    get:
      summary: "Get account transactions"
      tags:
        - core
      description: >
        Get account transactions <br>
        This method is available by following paths: /account/transactions, /address/transactions, /a/transactions
      parameters:
        - name: address
          in: query
          type: string
          required: true
          description: "Account address (both raw and user-friendly addresses formats supported)."
        - name: before_lt
          in: query
          type: integer
          description: "Get transactions before lt"
        - name: limit
          in: query
          type: integer
          default: 30
          description: "Limit transactions"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/AccountTransaction"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /blocks/feed:
    get:
      summary: "Get blocks feed"
      tags:
        - core
      description: >
        Get blocks feed <br>
        This method is available by following paths: /block/feed, /blocks/feed, /b/feed
      parameters:
        - name: scroll_id
          in: query
          type: string
          description: "Scroll ID"
        - name: limit
          in: query
          type: integer
          default: 30
          description: "Limit blocks"
        - name: workchain_id
          in: query
          type: integer
          description: "Workchain Id filter"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/BlocksFeedResponse'
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /timeseries/blocks-by-workchain:
    get:
      summary: "Blocks by workchain"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TimeseriesBlocksByWorkchain"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /timeseries/messages-by-type:
    get:
      summary: "Messages by type"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MessagesByTypeResult"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /timeseries/volume-by-grams:
    get:
      summary: "Volume by grams"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/VolumeByGramsResult"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /timeseries/messages-ord-count:
    get:
      summary: "Messages ord count"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/MessagesOrdCountResult"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /messages/feed:
    get:
      summary: "Messages feed"
      tags:
        - core
      description: ""
      parameters:
        - name: scroll_id
          in: query
          type: string
          description: "Scroll ID"
        - name: limit
          in: query
          type: integer
          default: 50
          description: "Limit messages"
        - name: workchain_id
          in: query
          type: integer
          description: "Workchain Id filter"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MessageFeedResponse'
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /addr/top-by-message-count:
    get:
      summary: "Top account by message in/out"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/AddrTopByMessageCountResponse"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /top/whales:
    get:
      summary: "Top whales account by gram amount"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/AccountWhale"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"

  /stats/global-metrics:
    get:
      summary: "Get some global blockchain metrics"
      tags:
        - main
      description: ""
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GlobalMetrics"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"


tags:
  - name: core
    description: The Core methods.
  - name: main
    description: The Main methods.
#  - name: timeseries
#    description: The Core methods.
