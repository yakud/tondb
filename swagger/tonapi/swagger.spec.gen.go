// Package tonapi provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package tonapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
