// Package tonapi provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package tonapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"WlZkmAAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
