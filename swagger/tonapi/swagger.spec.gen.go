// Package tonapi provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package tonapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
