// Package tonapi provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package tonapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
