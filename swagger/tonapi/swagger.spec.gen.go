// Package tonapi provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package tonapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
